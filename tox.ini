# To run the unit tests against multiple python versions you will need
# the necessary python versions installed, and Tox.
#   pip install tox
#   tox
[tox]
envlist =
    # the format of this env list needs to be kept in sync
    # with TOX_ENV_RE in .github/workflows/django.yml and bin/runtests.sh

    # in order to speed things up a bit we don't cover every single permutation
    # but we should have a representative sample
    {py36,py38}-django22-authtools-postgresql-opts

    {py37,py38}-{django22,django32}-postgresql-opts

    {py36,py39}-{django22,django32}-{mysql,postgresql}-opts
    {py36,py39}-{django22,django32}-{mysql,postgresql}

isolated_build = true

[testenv]
setenv =
    TOX=1
passenv=
    CI_*
    HOME
    MYSQL_*
    DB*
    SECRET_KEY
    PGDATABASE

deps=
    opts: -rrequirements-optional.txt
    django22: Django>=2.2,<2.3
    django22-opts: django-authtools
    django32: Django>=3.2,<3.3
    mysql: mysqlclient
    # need <2.9 to work with django 2.2: https://github.com/psycopg/psycopg2/issues/1293
    postgresql: psycopg2<2.9
commands=
    mysql: python manage.py test --noinput {posargs}
    # Sometimes postgres teardown doesn't work; there are connections held open
    # so the DB can't be dropped.
    # allianceutils has no test cases so we just use it to ensure the DB is dropped
    # before running the real test cases in test_allianceutils
    postgresql: python manage.py test --noinput allianceutils
    postgresql: python manage.py test --noinput --keepdb {posargs}
