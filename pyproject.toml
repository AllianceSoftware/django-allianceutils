[tool.poetry]
name = "django-allianceutils"
version = "2.2.0"
description = "Alliance Software common utilities for Django"
repository = "https://github.com/AllianceSoftware/django-allianceutils/"
homepage = "https://github.com/AllianceSoftware/django-allianceutils/"
documentation = "https://github.com/AllianceSoftware/django-allianceutils/blob/master/README.md"
authors = ["Alliance Software <support@alliancesoftware.com.au>"]
license = "BSD-2-Clause"
readme = "README.md"
packages = [
    { include = "allianceutils" },
]
include = [
    "CHANGELOG.md",
	"LICENSE",
]
keywords = [
    "django",
    'alliance',
    'alliancesoftware',
]

[tool.poetry.urls]
issues = "https://github.com/AllianceSoftware/django-allianceutils/issues"


[tool.poetry.dependencies]
# you need the <4.0 for cachetools which is a tox dependency
python = ">=3.8,<4.0"

# the only hard dependency is django; everything else is only required
# if you use functions/classes that require them
#
# IMPORTANT
# We need to specify a minimum django version that this package requires, but
#   this means that when poetry creates a lock file that it will pick the latest
#   version available
# For development purposes we will override this in tox to install a specific
#   version
# It's not possible to natively get poetry to use a different version for dev
#   via groups or extras because it only resolves dependencies once (globally)
#   see https://github.com/python-poetry/poetry/issues/6611
Django = ">=3.2"

# optional extras
django-filter = { version = "*", optional = true }
django-storages = { version = "*", optional = true }
djangorestframework = { version = "*", optional = true }
isort = { version = ">=5", optional = true }
logging_tree = { version = "*", optional = true }
rules = { version = "*", optional = true }

# optional databases
mysqlclient = { version = "*", optional = true }
psycopg2 = { version = "*", optional = true }


[tool.poetry.extras]
extras = [
	"django-filter",
	"django-storages",
	"djangorestframework",
	"isort",
	"logging_tree",
	"rules",
]
mysql = ["mysqlclient"]
postgres = ["psycopg2"]


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
isort = ">=5"
tox = ">=4"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.isort]
force_single_line = true
force_sort_within_sections = true
line_length = 110
order_by_type = false
skip_glob = [
	"*/.tox/*",
	"*/node_modules/*.py",
	"*/migrations/0*.py",
	"*/settings/*.py",
]
# stdlib that may be backported or not always there
extra_standard_library=[
	"pkg_resources",
	"setuptools",
	"typing",
]

# packages that we may have made local modifications too or are checked out from github
# IsortTestCase has expectations about what is set here:
known_third_party=["test_allianceutils.tests.isort_force_thirdparty"]
#known_first_party=["allianceutils"]
